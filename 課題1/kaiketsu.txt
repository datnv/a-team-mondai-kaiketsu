import java.util.Scanner;

public class Kaiketsu {
	static float w =0;//Tien Min
	static float maxImportant =0;
	static float[] a = new float[50];//cost array
	static float[] c = new float[50];//important array
	static int n = 0;
	
	static int[] x = new int[50];
	static float[] xopt,ind = new float[50];
	static float fopt, cost, weight =0;
	
	public static void InputData(){
		
		Scanner kb = new Scanner(System.in);
		String n1=kb.next();
		n = Integer.parseInt(n1);
		w = Integer.parseInt(kb.next());
		maxImportant =0;
		//set 
		float total_a = 0;

		for(int i=0;i<n;i++){
			//set arrPrice
			a[i]= Integer.parseInt(kb.next());
			total_a = total_a+a[i];
			//set arrImP
			c[i]= Integer.parseInt(kb.next());
			fopt = fopt + c[i];
			x[i]=0;

		}
		fopt = fopt*total_a;
	}
	
	public static void Sort(){
		float t, tg = 0;
//		for(int i=0; i<n; i++){ind[i]=i;}
		
		for(int i=0; i<n-1; i++){
			for(int j=i+1; j<n; j++){
				if((float)c[i]/a[i]>(float)c[j]/a[j]){
					t=c[i]; c[i]=c[j];c[j]=t;
					t=a[i]; a[i]=a[j];a[j]=t;
					tg=ind[i]; ind[i]=ind[j]; ind[j]=tg;
				}
				
			}
		}
		
	}
	
	
	public static void GhiKiLuc(){
		if (cost < fopt){
			fopt=cost;
		}
	}
	
	public static void KQDuyet(int i){//0<= i < n
		int t=0;
		if((w - weight)>0)t=1;else t=0;
		for(int j=t; j>=0; j--){
			x[i]=j;
			weight = weight+a[i]*x[i];
			cost = cost + c[i]*x[i];
			float hs = w- weight;//remain weight
			if (i == n){
				if(hs>0){
					
				}else{
					GhiKiLuc();
				}
			}
			else{
				if(hs>0){
					if((cost+(float)c[i+1]*hs/a[i+1])<fopt){
						KQDuyet(i+1);
					}
				}else{
					if(cost<fopt){
						KQDuyet(i+1);
					}
					
				}
			}
			
			weight = weight - a[i]*x[i];
			cost = cost - c[i]*x[i];
		}
		
	}
	
	
	
	public static void main(String[] args) {
		InputData();
		Sort();
		KQDuyet(0);
		System.out.print(Math.round(fopt));
	}
}
